1. 계정정보 등록
   git config --global user.name trstyq
   git config --global user.email trstyq@gmail.com

2. git-prac 폴더를 git이 관리하는 폴더로 지정
   git init

3. 기본으로 생성되는 master 브랜치에서 main 브랜치로
   git checkout -b main : main 브랜치 생성 후 해당 브랜치로 이동
   git branch  -M main : 기본 브랜치를 main으로
   git status : 상태 확인

4. 파일을 생성하고, add commit 하기
  git add git-study.txt
  git commit : commit에 대한 메세지를 남기기 위해 vi에디터가 실행
	- i : 입력모드로 변경
	- esc : 입력모드에서 나오기
	- wq : 저장, 종료
  git commit -m 'message' : commit하고 짧은 메세지 작성(굳이 vi editor 안들어가도 댐)
<<<<<<< HEAD
  git log : commit 내역 확인

5. 특정 commit 지점으로 되돌리기
  1) git log 또는 git reflag를 통해 comit id 확인
  2) git reset --soft<commit> : commit 내역을 되돌리고, commit만 취소(staging area)
      git reset --mixed<commit> : commit 내역을 되돌리고 staging 까지 취소
      -----------------파일 영향 없음--------------------
      git reset --hard<commit> : commit 내역을 되돌리고 파일을 rollback
      git revert <commit> : 지정한 commit으로 인해 발생한 변경을 되돌리고, 새로운 commit을 생성해 commit에 추가!sadad

6. 원격 리포지토리 추가 및 push/pull
     git remote add origin <https://github.com/ts2580/PM-GIT>
     git pull --allow-unrelated-histories origin main
	* 원격 리포지토리에서 처음 pull 할 때만 --allow-unrelated-histories 사용
     git push -u origin main 
	-u : push 할 기본 원격 저장소와 브랜치를 기억
	      앞으로는 git push만 해도 원격 저장소와 브랜치를 잡아준다.

7. git branch 
   git checkout -b <branchName> : 새로운 브랜치를 생성하고 이동
   git checkout <branchName> : 기존 브랜치로 이동
   git merge <branchName> : 브랜치 병합(병합할 branch의 commit 내역도 병합)
   git merge -squash <branchName> : commit 내역 뺴고 병합. 
			********병합 후 반드시 commit 해줄것

8. conflict
   동시에 복수의 사용자가 같은 파일의 같은 라인에 수정을 발생시키면 발생
   바료ㅐㅇ 라인을 git이 표시해줌
  사용할 코드를 제외한 나머지는 삭제하고 add 이후 commit 하여 충돌 해결






